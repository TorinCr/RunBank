// Source code is decompiled from a .class file using FernFlower decompiler.
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;

public class RunBank {
   private static HashMap<String, Customer> customers = new HashMap();
   private static ArrayList<String> transactionLog = new ArrayList();
   private static final String CSV_FILE_NAME = "CS 3331 - Bank Users.csv";
   private static final String log_file_name = "transaction_log.txt";
   private static ArrayList<String> originalFileLines = new ArrayList();

   public RunBank() {
   }

   public static void main(String[] var0) {
      String var1 = "CS 3331 - Bank Users.csv";
      readCustomerDataFromFile(var1);
      Scanner var2 = new Scanner(System.in);

      while(true) {
         System.out.println("Are you an individual person or a bank manager?");
         System.out.println("1.) Individual Person");
         System.out.println("2.) Bank Manager");
         System.out.println("Type 'EXIT' to quit.");
         String var3 = var2.nextLine().trim();
         if (var3.equalsIgnoreCase("EXIT")) {
            var2.close();
            return;
         }

         if (var3.equals("1")) {
            handleIndividualPerson(var2);
         } else if (var3.equals("2")) {
            handleBankManager(var2);
         } else {
            System.out.println("Invalid selection. Please try again.");
         }
      }
   }

   private static void handleIndividualPerson(Scanner var0) {
      System.out.println("Enter your first name:");
      String var1 = var0.nextLine().trim();
      System.out.println("Enter your last name:");
      String var2 = var0.nextLine().trim();
      String var3 = var1 + " " + var2;
      Customer var4 = (Customer)customers.get(var3);
      if (var4 != null) {
         while(true) {
            System.out.println("\nWhat would you like to do?");
            System.out.println("1. View all accounts");
            System.out.println("2. Deposit money");
            System.out.println("3. Withdraw money");
            System.out.println("4. Transfer between accounts");
            System.out.println("5. Pay someone");
            System.out.println("6. Exit");
            String var5 = var0.nextLine().trim();

            try {
               switch (var5) {
                  case "1":
                     var4.displayAllAccounts();
                     break;
                  case "2":
                     System.out.println("Enter account number:");
                     int var8 = Integer.parseInt(var0.nextLine().trim());
                     System.out.println("Enter amount to deposit:");
                     double var9 = Double.parseDouble(var0.nextLine().trim());
                     var4.deposit(var8, var9);
                     break;
                  case "3":
                     System.out.println("Enter account number:");
                     int var11 = Integer.parseInt(var0.nextLine().trim());
                     System.out.println("Enter amount to withdraw:");
                     double var12 = Double.parseDouble(var0.nextLine().trim());
                     var4.withdraw(var11, var12);
                     break;
                  case "4":
                     System.out.println("Enter source account number:");
                     int var14 = Integer.parseInt(var0.nextLine().trim());
                     System.out.println("Enter destination account number:");
                     int var15 = Integer.parseInt(var0.nextLine().trim());
                     System.out.println("Enter amount to transfer:");
                     double var16 = Double.parseDouble(var0.nextLine().trim());
                     var4.transfer(var14, var15, var16);
                     break;
                  case "5":
                     System.out.println("Enter recipient's first name:");
                     String var18 = var0.nextLine().trim();
                     System.out.println("Enter recipient's last name:");
                     String var19 = var0.nextLine().trim();
                     String var20 = var18 + " " + var19;
                     Customer var21 = (Customer)customers.get(var20);
                     if (var21 != null) {
                        System.out.println("Enter your account number:");
                        int var22 = Integer.parseInt(var0.nextLine().trim());
                        System.out.println("Enter recipient's account number:");
                        int var23 = Integer.parseInt(var0.nextLine().trim());
                        System.out.println("Enter amount to pay:");
                        double var24 = Double.parseDouble(var0.nextLine().trim());
                        var4.payOther(var21, var22, var23, var24);
                     } else {
                        System.out.println("Recipient not found");
                     }
                     break;
                  case "6":
                     return;
                  default:
                     System.out.println("Invalid option. Please try again.");
               }
            } catch (NumberFormatException var26) {
               System.out.println("Invalid input. Please enter valid numbers.");
            }
         }
      } else {
         System.out.println("No accounts found for " + var3);
      }
   }

   private static void handleBankManager(Scanner var0) {
      System.out.println("Would you like to inquire about an account by:");
      System.out.println("1.) Name");
      System.out.println("2.) Type/Number");
      String var1 = var0.nextLine().trim();
      String var2;
      if (var1.equals("1")) {
         System.out.println("Whose account would you like to inquire about?");
         var2 = var0.nextLine().trim();
         Customer var7 = (Customer)customers.get(var2);
         if (var7 != null) {
            var7.displayAllAccounts();
         } else {
            System.out.println("No accounts found for " + var2);
         }
      } else if (!var1.equals("2")) {
         System.out.println("Invalid selection.");
      } else {
         System.out.println("What is the account type? (Checking/Savings)");
         var2 = var0.nextLine().trim().toLowerCase();
         System.out.println("What is the account number?");
         int var3 = Integer.parseInt(var0.nextLine().trim());
         Iterator var4 = customers.values().iterator();

         Customer var5;
         Account var6;
         do {
            do {
               if (!var4.hasNext()) {
                  System.out.println("Account not found.");
                  return;
               }

               var5 = (Customer)var4.next();
               var6 = var5.getAccount(var3);
            } while(var6 == null);
         } while((!var2.equals("checking") || !(var6 instanceof Checking)) && (!var2.equals("savings") || !(var6 instanceof Savings)));

         System.out.println("Account holder: " + var5.getName());
         System.out.println("Account Number: " + var6.getAccountNumber());
         System.out.println("Balance: $" + var6.getBalance());
         return;
      }

   }

   public static void logTransaction(String var0) {
      transactionLog.add(var0);
      appendToLogFile(var0);
   }

   private static void appendToLogFile(String var0) {
      try {
         BufferedWriter var1 = new BufferedWriter(new FileWriter("transaction_log.txt", true));

         try {
            var1.write(var0);
            var1.newLine();
         } catch (Throwable var5) {
            try {
               var1.close();
            } catch (Throwable var4) {
               var5.addSuppressed(var4);
            }

            throw var5;
         }

         var1.close();
      } catch (IOException var6) {
         System.out.println("Error writing to log file: " + var6.getMessage());
      }

   }

   private static void loadExistingTransactionLog() {
      try {
         BufferedReader var0 = new BufferedReader(new FileReader("transaction_log.txt"));

         String var1;
         try {
            while((var1 = var0.readLine()) != null) {
               transactionLog.add(var1);
            }
         } catch (Throwable var4) {
            try {
               var0.close();
            } catch (Throwable var3) {
               var4.addSuppressed(var3);
            }

            throw var4;
         }

         var0.close();
      } catch (IOException var5) {
         if (!var5.getMessage().contains("No such file")) {
            System.out.println("Error reading transaction log: " + var5.getMessage());
         }
      }

   }

   public static void saveLogsToFile(String var0) {
      try {
         BufferedWriter var1 = new BufferedWriter(new FileWriter(var0));

         try {
            Iterator var2 = transactionLog.iterator();

            while(true) {
               if (!var2.hasNext()) {
                  System.out.println("Transaction log saved to " + var0);
                  break;
               }

               String var3 = (String)var2.next();
               var1.write(var3);
               var1.newLine();
            }
         } catch (Throwable var5) {
            try {
               var1.close();
            } catch (Throwable var4) {
               var5.addSuppressed(var4);
            }

            throw var5;
         }

         var1.close();
      } catch (IOException var6) {
         System.out.println("Error writing to the log file: " + var6.getMessage());
      }

   }

   private static List<String> parseCSVLine(String var0) {
      ArrayList var1 = new ArrayList();
      StringBuilder var2 = new StringBuilder();
      boolean var3 = false;
      char[] var4 = var0.toCharArray();
      int var5 = var4.length;

      for(int var6 = 0; var6 < var5; ++var6) {
         char var7 = var4[var6];
         if (var7 == '"') {
            var3 = !var3;
            var2.append(var7);
         } else if (var7 == ',' && !var3) {
            var1.add(var2.toString());
            var2.setLength(0);
         } else {
            var2.append(var7);
         }
      }

      var1.add(var2.toString());

      while(var1.size() < 13) {
         var1.add("");
      }

      return var1;
   }

   public static void readCustomerDataFromFile(String var0) {
      try {
         BufferedReader var1 = new BufferedReader(new FileReader(var0));

         try {
            originalFileLines.clear();
            customers.clear();
            String var2 = var1.readLine();
            originalFileLines.add(var2);

            String var3;
            while((var3 = var1.readLine()) != null) {
               originalFileLines.add(var3);
               List var4 = parseCSVLine(var3);
               if (var4.size() >= 13) {
                  String var5 = ((String)var4.get(0)).trim();
                  String var6 = ((String)var4.get(1)).trim();
                  String var7 = ((String)var4.get(2)).trim();
                  String var8 = ((String)var4.get(3)).trim();
                  String var9 = ((String)var4.get(4)).trim().replace("\"", "");
                  String var10 = ((String)var4.get(5)).trim();
                  String var11 = var6 + " " + var7;
                  Customer var12 = new Customer(var11);
                  var12.setCustomerDetails(var5, var8, var9, var10);

                  try {
                     String var13 = ((String)var4.get(6)).trim();
                     String var14 = ((String)var4.get(7)).trim();
                     if (!var13.isEmpty() && !var14.isEmpty()) {
                        int var15 = Integer.parseInt(var13);
                        double var16 = Double.parseDouble(var14);
                        var12.addAccount(new Checking(var16, var15));
                     }

                     String var29 = ((String)var4.get(8)).trim();
                     String var30 = ((String)var4.get(9)).trim();
                     if (!var29.isEmpty() && !var30.isEmpty()) {
                        int var17 = Integer.parseInt(var29);
                        double var18 = Double.parseDouble(var30);
                        var12.addAccount(new Savings(var18, var17));
                     }

                     String var31 = ((String)var4.get(10)).trim();
                     String var32 = ((String)var4.get(11)).trim();
                     String var19 = ((String)var4.get(12)).trim();
                     if (!var31.isEmpty() && !var32.isEmpty() && !var19.isEmpty()) {
                        int var20 = Integer.parseInt(var31);
                        double var21 = Double.parseDouble(var32);
                        double var23 = Double.parseDouble(var19);
                        var12.addAccount(new Credit(var23, var20, var21));
                     }

                     customers.put(var11, var12);
                  } catch (NumberFormatException var26) {
                     System.out.println("Error parsing account data for customer " + var11);
                     var26.printStackTrace();
                  }
               }
            }

            System.out.println("Customer data loaded successfully.");
         } catch (Throwable var27) {
            try {
               var1.close();
            } catch (Throwable var25) {
               var27.addSuppressed(var25);
            }

            throw var27;
         }

         var1.close();
      } catch (IOException var28) {
         System.out.println("Error reading from file: " + var28.getMessage());
      }

   }

   public static void updateCustomerDataFile() {
      try {
         BufferedWriter var0 = new BufferedWriter(new FileWriter("CS 3331 - Bank Users.csv"));

         try {
            var0.write((String)originalFileLines.get(0));
            var0.newLine();
            int var1 = 1;

            while(true) {
               if (var1 >= originalFileLines.size()) {
                  System.out.println("Customer data updated successfully.");
                  break;
               }

               String var2 = (String)originalFileLines.get(var1);
               String[] var3 = var2.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)");
               StringBuilder var4 = new StringBuilder();
               String var5 = var3[1].trim();
               String var6 = var3[2].trim();
               String var7 = var5 + " " + var6;
               Customer var8 = (Customer)customers.get(var7);
               if (var8 != null) {
                  int var9;
                  for(var9 = 0; var9 < 6; ++var9) {
                     var4.append(var3[var9]).append(",");
                  }

                  Account var10;
                  if (!var3[6].trim().isEmpty()) {
                     var9 = Integer.parseInt(var3[6].trim());
                     var10 = var8.getAccount(var9);
                     var4.append(var3[6]).append(",");
                     if (var10 != null) {
                        var4.append(String.format("%.2f", var10.getBalance()));
                     } else {
                        var4.append(var3[7]);
                     }
                  } else {
                     var4.append(var3[6]).append(",").append(var3[7]);
                  }

                  var4.append(",");
                  if (!var3[8].trim().isEmpty()) {
                     var9 = Integer.parseInt(var3[8].trim());
                     var10 = var8.getAccount(var9);
                     var4.append(var3[8]).append(",");
                     if (var10 != null) {
                        var4.append(String.format("%.2f", var10.getBalance()));
                     } else {
                        var4.append(var3[9]);
                     }
                  } else {
                     var4.append(var3[8]).append(",").append(var3[9]);
                  }

                  var4.append(",");
                  if (!var3[10].trim().isEmpty()) {
                     var9 = Integer.parseInt(var3[10].trim());
                     var10 = var8.getAccount(var9);
                     var4.append(var3[10]).append(",");
                     var4.append(var3[11]).append(",");
                     if (var10 != null) {
                        var4.append(String.format("%.2f", var10.getBalance()));
                     } else {
                        var4.append(var3[12]);
                     }
                  } else {
                     var4.append(var3[10]).append(",").append(var3[11]).append(",").append(var3[12]);
                  }

                  var0.write(var4.toString());
               } else {
                  var0.write(var2);
               }

               var0.newLine();
               ++var1;
            }
         } catch (Throwable var12) {
            try {
               var0.close();
            } catch (Throwable var11) {
               var12.addSuppressed(var11);
            }

            throw var12;
         }

         var0.close();
      } catch (IOException var13) {
         System.out.println("Error updating customer data file: " + var13.getMessage());
      }

   }
}
